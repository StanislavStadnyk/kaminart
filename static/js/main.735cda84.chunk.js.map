{"version":3,"sources":["other/constants.ts","other/utils.ts","config.js","components/Navigation/Navigation.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","other/lib/BackToTop/BackToTop.tsx","components/Intro/Intro.tsx","components/CardBox/CardBox.tsx","components/Categories/Categories.tsx","components/About/About.tsx","components/Info/Info.tsx","pages/MainPage/MainPage.tsx","pages/GalleryPage/GalleryPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/ContactsPage/ContactsPage.tsx","App.tsx","serviceWorker.ts","other/translations/i18n.js","index.tsx"],"names":["TEL","TELEGRAM","EMAIL","handlerScrollToId","scrollToId","scrollOffset","event","preventDefault","scroller","scrollTo","duration","delay","offset","smooth","linkAndSmooth","history","link","section","offSet","push","setTimeout","withRouter","location","useEffect","window","pathname","PROD_URL","Navigation","closeNavbar","useHistory","dropDownLinks","categorySection_list","map","index","key","title","to","url","onClick","className","Container","fluid","Nav","navbar","NavItem","exact","Trans","i18nKey","screen","availWidth","Header","useState","collapsed","setCollapsed","Navbar","color","light","expand","Row","Col","sm","md","src","width","alt","href","NavbarToggler","Collapse","isOpen","Footer","BackToTop","isHidden","setHidden","handleScroll","show","pageYOffset","addEventListener","removeEventListener","classes","classNames","BackToTop__show","Button","outline","Intro","CardBox","item","img","text","Categories","list","About","id","Info","bbq","modern","MainPage","GalleryPage","match","params","dataArr","setDataArr","dataSourceArr","setDataSourceArr","toggler","slide","lightboxController","setLightboxController","fetch","then","response","json","data","arr","tranformatedArrForLightBox","pathBig","undefined","currentDescription","find","category","substr","galleryList","xs","number","pathSmall","length","sources","NotFoundPage","ContactsPage","size","target","rel","App","path","component","Boolean","hostname","resources","en","translation","ru","common_ru","i18n","use","initReactI18next","init","lng","interpolation","escapeValue","ReactGA","initialize","pageview","search","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.735cda84.chunk.js","sourcesContent":["// Links\nconst INSTAGRAM_URL = 'https://www.instagram.com/kaminart_kh';\n\n// Common\nconst LOGO = 'KaminArt';\n\n// Contacts\nconst TEL = { tel: '+380503009903', preview: '+38(050)-300-99-03' };\nconst VIBER = 'Viber';\nconst TELEGRAM = { id: 'Alexpenchak', name: 'Telegram' };\nconst EMAIL = 'info@kaminart.com.ua';\nconst INSTAGRAM = 'KaminArt_kh';\n\nexport { INSTAGRAM_URL, LOGO, TEL, VIBER, TELEGRAM, EMAIL, INSTAGRAM };\n","import { scroller } from 'react-scroll';\nimport { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nexport const handlerScrollToId = (\n  scrollToId: string,\n  scrollOffset: number | undefined,\n  event?: any\n) => {\n  event && event.preventDefault();\n  scroller.scrollTo(scrollToId, {\n    duration: 800,\n    delay: 0,\n    offset: scrollOffset || 0,\n    smooth: 'easeInOutQuart',\n  });\n};\n\nexport const linkAndSmooth = (\n  history: any,\n  link: string,\n  section: string,\n  offSet?: any\n) => {\n  history.push(link);\n  setTimeout(() => handlerScrollToId(section, offSet || 0), 0);\n};\n\nconst ScrollToTop = ({ location }: any) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return null;\n};\n\nexport default withRouter(ScrollToTop);\n","const PROD_URL = \"/kaminart\";\n\nexport { PROD_URL };\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { Nav, NavItem, Container } from 'reactstrap';\nimport { NavLink, useHistory, Link } from 'react-router-dom';\n\nimport { categorySection_list } from 'other/translations/ru/common.json';\nimport { linkAndSmooth } from 'other/utils';\nimport './Navigation.scss';\nimport {PROD_URL} from \"../../config\";\n\ninterface INavigationProps {\n  closeNavbar: () => void;\n}\n\nconst Navigation = ({ closeNavbar }: INavigationProps) => {\n  let history = useHistory();\n\n  const offSet = () => {\n    return window.screen.availWidth > 767 ? -200 : -100;\n  };\n\n  const dropDownLinks = categorySection_list.map((link, index) => {\n    return (\n      <li key={link.title + index}>\n        <NavLink to={`${PROD_URL}/gallery${link.url}`} onClick={closeNavbar}>\n          {link.title}\n        </NavLink>\n      </li>\n    );\n  });\n\n  return (\n    <div className='Navigation'>\n      <Container fluid={true}>\n        <Nav navbar>\n          <NavItem>\n            <NavLink\n              to={PROD_URL}\n              className='nav-link'\n              exact\n              onClick={() => {\n                linkAndSmooth(history, '/', 'top-section');\n                closeNavbar();\n              }}\n            >\n              <Trans i18nKey='navigation_main'>Главная</Trans>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <span className='nav-link'>\n              <Trans i18nKey='navigation_portfolio'>Наши работы</Trans>\n            </span>\n\n            <ul>{dropDownLinks}</ul>\n          </NavItem>\n          <NavItem>\n            <Link\n              to={PROD_URL}\n              className='nav-link'\n              onClick={() => {\n                linkAndSmooth(history, '/', 'about-section', offSet());\n                closeNavbar();\n              }}\n            >\n              <Trans i18nKey='navigation_about'>О нас</Trans>\n            </Link>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              to={`${PROD_URL}/contacts`}\n              className='nav-link'\n              onClick={() => {\n                closeNavbar();\n              }}\n            >\n              <Trans i18nKey='navigation_contacts'>Контакты</Trans>\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </Container>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  NavbarToggler,\n  Collapse,\n} from 'reactstrap';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { LOGO, TEL } from 'other/constants';\nimport Navigation from 'components/Navigation/Navigation';\nimport { linkAndSmooth } from 'other/utils';\nimport './Header.scss';\nimport {PROD_URL} from \"../../config\";\n\nconst Header = () => {\n  let history = useHistory();\n\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n  const closeNavbar = () => setCollapsed(true);\n\n  return (\n    <Navbar color='faded' light expand='md'>\n      <header className='Header'>\n        <Container fluid={true}>\n          <Row>\n            <Col sm={6} md={6}>\n              <Link\n                to={PROD_URL}\n                className='Header__logo'\n                onClick={() => linkAndSmooth(history, '/', 'top-section')}\n              >\n                <img src='/kaminart/assets/logo.png' width={150} alt={LOGO} />\n              </Link>\n            </Col>\n\n            <Col sm={6} md={6} className='Header__contacts d-none d-md-flex'>\n              <img src='/kaminart/assets/icons/phone.svg' width='24' alt='' />\n              <a href={`tel:${TEL.tel}`}>{TEL.preview}</a>\n            </Col>\n          </Row>\n        </Container>\n      </header>\n\n      <NavbarToggler onClick={toggleNavbar} />\n\n      <Collapse isOpen={!collapsed} navbar>\n        <Navigation closeNavbar={closeNavbar} />\n      </Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { TELEGRAM, LOGO, TEL, EMAIL } from 'other/constants';\nimport { linkAndSmooth } from 'other/utils';\nimport './Footer.scss';\nimport {PROD_URL} from \"../../config\";\n\nconst Footer = () => {\n  let history = useHistory();\n\n  return (\n    <footer className='Footer'>\n      <Container fluid={true}>\n        <Link\n          to={PROD_URL}\n          className='Logo'\n          onClick={() => linkAndSmooth(history, '/', 'top-section')}\n        >\n          <img src='/kaminart/assets/logo.png' width={90} alt={LOGO} />\n        </Link>\n\n        <ul className='Footer__contacts'>\n          <li>\n            <a href={`tel:${TEL.tel}`}>\n              <img src='/kaminart/assets/icons/phone.svg' width='22' alt={TEL.preview} />\n            </a>\n          </li>\n          <li>\n            <a href={`mailto:${EMAIL}`}>\n              <img src='/kaminart/assets/icons/mail.svg' width='30' alt={EMAIL} />\n            </a>\n          </li>\n          <li>\n            <a href={`tg://resolve?domain=${TELEGRAM.id}`}>\n              <img\n                src='/kaminart/assets/icons/telegram.svg'\n                width='24'\n                alt={TELEGRAM.name}\n              />\n            </a>\n          </li>\n          {/* <li>\n            <a href={INSTAGRAM_URL} target='_blank' rel='noopener noreferrer'>\n              <img\n                src='/kaminart/assets/icons/instagram.svg'\n                width='24'\n                alt={INSTAGRAM_URL}\n              />\n            </a>\n          </li> */}\n        </ul>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Button } from 'reactstrap';\n\nimport { handlerScrollToId } from 'other/utils';\nimport './BackToTop.scss';\n\nconst BackToTop = () => {\n  const [isHidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const show = window.pageYOffset > 50;\n      setHidden(show);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const classes = classNames('BackToTop', {\n    BackToTop__show: isHidden,\n  });\n\n  return (\n    <Button\n      outline\n      color='primary'\n      className={classes}\n      onClick={() => handlerScrollToId('top-section', 0)}\n    >\n      <img src='/kaminart/assets/icons/chevron-up.svg' width='24' alt='top' />\n    </Button>\n  );\n};\n\nexport default BackToTop;\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport { Trans } from 'react-i18next';\n\nimport './Intro.scss';\n\nconst Intro = () => (\n  <section className='Intro'>\n    <Container fluid={true}>\n      <h1>\n        <Trans i18nKey='introSection_title'>\n          Камины для дома, дачи и квартиры\n        </Trans>\n      </h1>\n    </Container>\n  </section>\n);\n\nexport default Intro;\n","import React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport './CardBox.scss';\nimport {PROD_URL} from \"../../config\";\n\ninterface IItemProps {\n  url: string;\n  img: string;\n  title: string;\n  text: string;\n}\n\nconst CardBox = (item: IItemProps) => {\n  const { url, img, title, text } = item;\n\n  return (\n    <Col md={4} sm={6} key={text}>\n      <div className='CardBox'>\n        <Link to={`${PROD_URL}/gallery${url}`} className='CardBox__link'>\n          <div className='CardBox__img'>\n            <img src={`/kaminart/assets/categories/${img}`} alt={title} width='100%' />\n          </div>\n          <h3>{title}</h3>\n          <p>{text}</p>\n        </Link>\n      </div>\n    </Col>\n  );\n};\n\nexport default CardBox;\n","import React, { ReactNode } from 'react';\nimport { Container, Row } from 'reactstrap';\n\nimport { categorySection_list } from 'other/translations/ru/common.json';\nimport CardBox from 'components/CardBox/CardBox';\nimport './Categories.scss';\n\nconst Categories = () => {\n  const list: Array<ReactNode> = categorySection_list.map(CardBox);\n\n  return (\n    <Container fluid={true} className='Categories'>\n      <Row>{list}</Row>\n    </Container>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport { Trans } from 'react-i18next';\n\nimport './About.scss';\n\nconst About = () => (\n  <section className='About container-fluid' id='about-section'>\n    <h1>\n      <Trans i18nKey='aboutSection_title'>\n        “КаминАрт” – тепло и уют в Вашем доме\n      </Trans>\n    </h1>\n    <p>\n      <Trans i18nKey='aboutSection_text'>\n        Здравствуйте. Наша компания работает в городе Харькове с 1995 года. Все\n        это время, несмотря на кризисы, мы плодотворно работали в области\n        проектирования, строительства и реконструкции каминов. Тесное\n        сотрудничество с профессиональными дизайнерами и архитекторами позволило\n        поднять наши изделия на высокий уровень, отвечающий современным\n        техническим и эстетическим требованиям.\n      </Trans>\n    </p>\n\n    <h2>\n      <Trans i18nKey='aboutSection_subTitle'>\n        Профессионализм и многолетний опыт\n      </Trans>\n    </h2>\n\n    <div className='About__info'>\n      <h3>\n        <Trans i18nKey='aboutSection_subText'>\n          Элитные камины всех стилей и <br /> направлений на заказ\n        </Trans>\n      </h3>\n    </div>\n  </section>\n);\n\nexport default About;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Trans } from 'react-i18next';\n\nimport { categorySection_list } from 'other/translations/ru/common.json';\nimport CardBox from 'components/CardBox/CardBox';\nimport './Info.scss';\n\nconst Info = () => {\n  const bbq = categorySection_list[5];\n  const modern = categorySection_list[1];\n\n  return (\n    <section className='Info'>\n      <Container fluid={true}>\n        <Row>\n          {CardBox(bbq)}\n          {CardBox(modern)}\n          <Col md={4}>\n            <div className='Info__box'>\n              <h4>\n                <Trans i18nKey='infoSection_title'>\n                  Изготовление и установка <br />(\n                  <strong>камины Харьков</strong>)\n                </Trans>\n              </h4>\n              <p>\n                <Trans i18nKey='infoSection_text'>\n                  Согласно вашим пожеланиям выбирается натуральный камень, из\n                  которого в дальнейшем будет изготовлен камин. Цены на\n                  изготовление мраморной облицовки минимальны, так как мы\n                  работаем без посредников. Мы выполняем все монтажные работы\n                  «под ключ».\n                </Trans>\n              </p>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default Info;\n","import React from 'react';\n\nimport Intro from 'components/Intro/Intro';\nimport Categories from 'components/Categories/Categories';\nimport About from 'components/About/About';\nimport Info from 'components/Info/Info';\n\nconst MainPage = () => (\n  <>\n    <Intro />\n    <Categories />\n    <About />\n    <Info />\n  </>\n);\n\nexport default MainPage;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport FsLightbox from 'fslightbox-react';\n\nimport { categorySection_list } from 'other/translations/ru/common.json';\nimport './GalleryPage.scss';\nimport {PROD_URL} from \"../../config\";\n\ninterface IGalleryPageProps {\n  match: any;\n  params: string;\n}\n\ninterface IDataItemType {\n  pathBig: string;\n  title: string;\n  pathSmall: string;\n}\n\nconst GalleryPage = ({\n  match: {\n    params: { url },\n  },\n}: IGalleryPageProps) => {\n  const [dataArr, setDataArr] = useState([]);\n  const [dataSourceArr, setDataSourceArr] = useState([]);\n\n  const [lightboxController, setLightboxController] = useState({\n    toggler: false,\n    slide: 1,\n  });\n\n  useEffect(() => {\n    setDataSourceArr([]); // need to reset before fetching\n\n    fetch(`${PROD_URL}/data.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        const arr = data[url];\n        setDataArr(arr);\n\n        const tranformatedArrForLightBox = arr.map((img: any) => {\n          return `/kaminart/assets/gallery${img.pathBig}`;\n        });\n\n        setDataSourceArr(tranformatedArrForLightBox);\n      });\n  }, [url]);\n\n  function openLightboxOnSlide(number: number) {\n    setLightboxController({\n      toggler: !lightboxController.toggler,\n      slide: number,\n    });\n  }\n\n  if (dataArr === undefined) {\n    return <Redirect to='/404' />;\n  }\n\n  const currentDescription = categorySection_list.find((category) => {\n    return category.url.substr(1) === url;\n  });\n\n  const galleryList = dataArr.map((item: IDataItemType, index: number) => {\n    return (\n      <Col md={3} sm={4} xs={6} key={item.title + index}>\n        <div className='CardBox'>\n          <div\n            onClick={() => openLightboxOnSlide(index + 1)}\n            className='CardBox__link'\n          >\n            <div className='CardBox__img'>\n              <img\n                src={`/kaminart/assets/gallery${item.pathSmall}`}\n                alt=''\n                width='100%'\n              />\n            </div>\n          </div>\n        </div>\n      </Col>\n    );\n  });\n\n  return (\n    <section className='GalleryPage'>\n      <Container fluid={true}>\n        {dataSourceArr && dataSourceArr.length > 0 && (\n          <FsLightbox\n            toggler={lightboxController.toggler}\n            sources={dataSourceArr}\n            slide={lightboxController.slide}\n          />\n        )}\n\n        {currentDescription && (\n          <header className='GalleryPage__header'>\n            <h1>{currentDescription.title}</h1>\n            <p>{currentDescription.text}</p>\n          </header>\n        )}\n\n        <Row>{galleryList}</Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default GalleryPage;\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { Container } from 'reactstrap';\n\nimport './NotFoundPage.scss';\n\nconst NotFoundPage = () => (\n  <Container fluid={true}>\n    <div className='NotFoundPage'>\n      <div className='NotFoundPage__holder'>\n        <img src='/kaminart/assets/gif404.gif' alt='404' />\n        <div>\n          <h3>404</h3>\n          <p>\n            <Trans i18nKey='notFoundPage_text'>Страница не найдена!</Trans>\n          </p>\n        </div>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport {\n  INSTAGRAM_URL,\n  TEL,\n  VIBER,\n  TELEGRAM,\n  EMAIL,\n  INSTAGRAM,\n} from 'other/constants';\nimport './ContactsPage.scss';\n\nconst ContactsPage = () => (\n  <section className='ContactsPage'>\n    <Container fluid={true}>\n      <Row>\n        <Col md={{ size: 6, offset: 3 }}>\n          <header className='ContactsPage__header'>\n            <h1>\n              <Trans i18nKey='navigation_contacts'>Контакты</Trans>\n            </h1>\n          </header>\n\n          <ul className='ContactsPage__contacts'>\n            <li>\n              <img src='/kaminart/assets/icons/phone.svg' width='22' alt={TEL.preview} />\n              <a href={`tel:${TEL.tel}`}>{TEL.preview}</a>\n            </li>\n            <li>\n              <img src='/kaminart/assets/icons/viber.svg' width='22' alt={VIBER} />\n              <a href={`viber://chat?number=${TEL.tel}`}>{VIBER}</a>\n            </li>\n            <li>\n              <img\n                src='/kaminart/assets/icons/telegram.svg'\n                width='22'\n                alt={TELEGRAM.name}\n              />\n              <a href={`tg://resolve?domain=${TELEGRAM.id}`}>{TELEGRAM.name}</a>\n            </li>\n            <li>\n              <img src='/kaminart/assets/icons/mail.svg' width='30' alt={EMAIL} />\n              <a href={`mailto:${EMAIL}`}>{EMAIL}</a>\n            </li>\n            <li>\n              <img\n                src='/kaminart/assets/icons/instagram.svg'\n                width='24'\n                alt={INSTAGRAM_URL}\n              />\n              <a href={INSTAGRAM_URL} target='_blank' rel='noopener noreferrer'>\n                {INSTAGRAM}\n              </a>\n            </li>\n          </ul>\n        </Col>\n      </Row>\n    </Container>\n  </section>\n);\n\nexport default ContactsPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// Components\nimport Header from 'components/Header/Header';\nimport Footer from 'components/Footer/Footer';\nimport { BackToTop } from 'other/lib/index';\n\n// Pages\nimport MainPage from 'pages/MainPage/MainPage';\nimport GalleryPage from 'pages/GalleryPage/GalleryPage';\nimport NotFoundPage from 'pages/NotFoundPage/NotFoundPage';\nimport ContactsPage from 'pages/ContactsPage/ContactsPage';\n\nimport ScrollToTop from 'other/utils';\nimport {PROD_URL} from \"./config\";\n\nconst App = () => (\n  <div className='App' id='top-section'>\n    <Router>\n      <ScrollToTop />\n      <Header />\n\n      <Switch>\n        <Route path={PROD_URL} exact component={MainPage} />\n        <Route path={`${PROD_URL}/gallery/:url`} component={GalleryPage} />\n        <Route path={`${PROD_URL}/contacts`} component={ContactsPage} />\n        <Route path={`${PROD_URL}*`} component={NotFoundPage} />\n      </Switch>\n\n      <Footer />\n\n      <BackToTop />\n    </Router>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport common_en from './en/common.json';\nimport common_ru from './ru/common.json';\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  en: {\n    translation: common_en, // 'common' is our custom namespace\n  },\n  ru: {\n    translation: common_ru,\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'ru',\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Multilanguage\nimport 'other/translations/i18n';\n\nReactGA.initialize('UA-180696350-1');\n\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}